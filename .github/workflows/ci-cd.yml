name: CI-CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            libcurl4-openssl-dev \
            libmicrohttpd-dev \
            libcjson-dev \
            cppcheck \
            podman \
            awscli

      - name: Run static analysis
        run: make static-check

      - name: Run unit tests
        run: make test

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Check ECR repo exists
        run: |
          aws ecr describe-repositories --repository-names crypto-service --region us-east-1 || \
          aws ecr create-repository --repository-name crypto-service --region us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push container image to ECR
        run: |
          podman build -t crypto-service:latest .
          podman tag crypto-service:latest ${{ steps.login-ecr.outputs.registry }}/crypto-service:latest
          podman push ${{ steps.login-ecr.outputs.registry }}/crypto-service:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Terraform Init
        run: terraform init

      - name: Import ECR repository into Terraform state
        run: |
          if ! terraform state list | grep -q "aws_ecr_repository.crypto_service"; then
            echo "Importing existing ECR repo into Terraform state..."
            terraform import aws_ecr_repository.crypto_service crypto-service
          else
            echo "ECR repo already in Terraform state, skipping import."
          fi

      - name: Terraform Apply
        run: terraform apply -auto-approve
